#!/bin/bash

. ${MFEXT_HOME}/lib/bash_utils.sh
exit_if_root

function usage() {
    echo "usage: _circus.stop"
}

if test $# -ne 0; then
  usage
  exit 1
fi
if test "${MODULE}" = ""; then
  echo "ERROR: MODULE env var is empty"
  exit 1
fi

ENDPOINT=$(env |grep "^${MODULE}_CIRCUS_ENDPOINT" |awk -F '=' '{print $2;}')

# La chaine qui identifie le processus au sens d'un "pgrep -f"
IDENTIFY="circusd.*${MODULE_RUNTIME_HOME}/tmp/config_auto/circus.ini"

# Arret du daemon
echo -n "- Stopping circus (slow)..."
echo_running
# Verification si le daemon est bien toujours present
_circus.status >/dev/null 2>&1
if test ${?} -gt 0; then
  echo_warning "(already stopped)"
  exit 1
fi
echo "*****************************************************************************" >>${MODULE_RUNTIME_HOME}/log/circus.log
echo "`date` : STOPPING circus" >>${MODULE_RUNTIME_HOME}/log/circus.log
echo "*****************************************************************************" >>${MODULE_RUNTIME_HOME}/log/circus.log
timeout 401s _circusctl --endpoint ${ENDPOINT} --timeout=400 quit --waiting > /dev/null 2>&1
sleep 2
_circus.status >/dev/null 2>&1
if test ${?} -eq 0; then
  for PID in `pgrep -U ${MODULE_RUNTIME_USER} -f "${IDENTIFY}"`; do
    recursive_kill.py ${PID} >/dev/null 2>&1
  done
fi
_circus.status >/dev/null 2>&1
if test ${?} -eq 0; then
  echo_nok
  echo "=> see ${MODULE_RUNTIME_HOME}/log/circus.log for more details"
  exit 1
else
  echo_ok
fi

# On sort
exit 0
